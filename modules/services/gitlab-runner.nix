{ config, lib, pkgs, ... }:

with lib;

let

  cfg = config.services.gitlab-runner;
  user = config.users.users.gitlab-runner;

in

{
  options = {
    services.gitlab-runner = {
      enable = mkEnableOption "Gitlab Runner";

      configFile = mkOption {
        type = types.path;
        default = "/etc/gitlab-runner/config.toml";
        description = ''
          Configuration file for gitlab-runner. This file is
          generated by running <command>sudo gitlab-runner register --config
          /etc/gitlab-runner/config.toml</command>.
        '';
      };

      dataDir = mkOption {
        type = types.str;
        default = "/var/lib/gitlab-runner";
        description = ''
          The working directory for the Gitlab runner.
        '';
      };

      logFile = mkOption {
        type = types.path;
        default = "/var/log/gitlab-runner.log";
        description = ''
          The path of the log file for Gitlab runner service.
        '';
      };

      package = mkOption {
        type = types.package;
        default = pkgs.gitlab-runner.bin;
        defaultText = "pkgs.gitlab-runner.bin";
        description = "Which gitlab-runner derivation to use";
      };
    };
  };

  config = mkIf cfg.enable {

    # Make the gitlab-runner command available so users can query and setup
    # the runner
    environment.systemPackages = [ cfg.package ];

    users.knownGroups = [ "gitlab-runner" ];
    users.knownUsers = [ "gitlab-runner" ];

    users.users.gitlab-runner.uid = mkDefault 357;
    users.users.gitlab-runner.home = mkDefault cfg.dataDir;
    users.users.gitlab-runner.shell = "/run/current-system/sw/bin/bash";
    users.users.gitlab-runner.description = "gitlab-runner service user";

    launchd.daemons.gitlab-runner = {
      environment = {
        # Gitlab runner will not start if the HOME variable is not set
        HOME = cfg.dataDir;
      };

      script = ''
        # Make sure that the token is only readable by root
        chown 0:0 '${cfg.configFile}'
        chmod 0600 '${cfg.configFile}'

        # Start the runner
        exec ${cfg.package}/bin/gitlab-runner run \
          --working-directory ${cfg.dataDir} \
          --config ${cfg.configFile} \
          --service gitlab-runner \
          --user gitlab-runner \
      '';

      serviceConfig = {
        KeepAlive = true;
        RunAtLoad = true;

        StandardErrorPath = cfg.logFile;
        StandardOutPath = cfg.logFile;
        WorkingDirectory = cfg.dataDir;
      };
    };

    system.activationScripts.preActivation.text = ''
      mkdir -p '${cfg.dataDir}'
      touch '${cfg.logFile}'
      chown ${toString user.uid}:${toString user.gid} '${cfg.dataDir}' '${cfg.logFile}'
    '';
  };
}
